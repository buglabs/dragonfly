<project name="build-com.buglabs.bug.emulator" default="publish">
	<property name="build.level" value="integration" />
	<import file="common.xml" />

	<property name="git.bin" location="/usr/bin/git" />

	<property name="meta.project" value="com.buglabs.bug.emulator" />
	<property name="meta.distDirectory" location="${checkout.dir}/${meta.project}/dist" />
	<property name="distDirectory" location="${meta.distDirectory}" />
	<property name="eclipse.default.file" value="${eclipse.dir}/eclipse-lin.tar.gz" />
	<property name="eclipse.dir" value="/opt/jenkins/build-deps/com.eclipse.sdk" />
	<property name="apache.mirror.url" value="http://www.ibiblio.org/pub/mirrors/apache" />
	<property name="felix.download.url" value="http://mirrors.ibiblio.org/pub/mirrors/apache/felix/" />
	<property name="tmp.dir" location="/tmp/dragonly_build_tmp" />

	<!-- ===================================================================== -->
	<!-- Build properties setup -->
	<!-- Depending on how this script is executed build properties are either generated or inhereted from calling script -->
	<!-- ===================================================================== -->
	<if>
		<not>
			<isset property="full.sdk.build.id" />
		</not>
		<then>
			<tstamp />
			<property name="timestamp" value="${DSTAMP}${TSTAMP}" />
			<property name="build.id" value="3.0.${timestamp}" />
			<property name="bundle.version" value="${emulator.bundle.version}.${DSTAMP}" />
			<property name="project.version" value="${bug.version}${build.id}" />
			<echo message="[Build type]: Running individual component build version ${bundle.version}..." />
		</then>
		<else>
			<property name="timestamp" value="${DSTAMP}${TSTAMP}" />
			<property name="build.id" value="3.0.${timestamp}" />
			<property name="bundle.version" value="2.0.${DSTAMP}" />
			<property name="project.version" value="${bug.version}.${full.sdk.build.id}" />
			<echo message="[Build type]: Running full SDK component build version ${project.version}..." />
		</else>
	</if>

	<!--
	<property name="externalDirectory" location="${checkout.dir}/com.buglabs.bug.kernel.external" />
	-->


	<tstamp />

	<target name="checkout" description="Checks out projects from svn" depends="clean,makeDirs">
		<echo message="Exctracting Eclipse SDK..." />
		<if>
			<and>
				<isset property="eclipse.file" />
				<available file="${eclipse.file}" type="file" />
			</and>
			<then>
				<echo message="${eclipse.file} exists, copying..." />
				<copy tofile="${checkout.dir}/com.eclipse.sdk/eclipse-lin.tar.gz">
					<fileset file="${eclipse.file}" />
				</copy>
			</then>

			<elseif>
				<available file="${eclipse.default.file}" type="file" />
				<then>
					<echo message="${eclipse.default.file} exists, copying..." />
					<copy tofile="${checkout.dir}/com.eclipse.sdk/eclipse-lin.tar.gz">
						<fileset file="${eclipse.default.file}" />
					</copy>
				</then>
			</elseif>

			<else>
				<echo message="Unable to find ${eclipse.file} or ${eclipse.default.file}, please add files or update the eclipse.file property" />
			</else>
		</if>

		<exec dir="${checkout.dir}/com.eclipse.sdk" executable="tar">
			<arg line="xfzv eclipse-lin.tar.gz" />
		</exec>

		<copy todir="${checkout.dir}/libs">
			<fileset file="${checkout.dir}/com.eclipse.sdk/eclipse/plugins/javax.servlet_*" />
			<fileset file="${checkout.dir}/com.eclipse.sdk/eclipse/plugins/org.eclipse.osgi_*" />
			<fileset file="${checkout.dir}/com.eclipse.sdk/eclipse/plugins/org.eclipse.osgi.services_*" />
		</copy>

		<property name="externalDirectory" location="${checkout.dir}/libs" />

		<delete dir="${tmp.dir}"/> 
		<mkdir dir="${tmp.dir}" />
		<exec executable="${git.bin}" dir="${tmp.dir}">
			<arg value="clone" />
			<arg value="git://github.com/buglabs/bug-osgi.git" />
		</exec>

		<copy todir="${checkout.dir}">
			<fileset dir="${tmp.dir}/bug-osgi">
			</fileset>
		</copy>

		<delete dir="${tmp.dir}" /> 
		<mkdir dir="${tmp.dir}" />
		<exec executable="${git.bin}" dir="${tmp.dir}">
			<arg value="clone" />
			<arg value="git://github.com/buglabs/dragonfly.git" />
		</exec>

		<copy todir="${checkout.dir}">
			<fileset dir="${tmp.dir}/dragonfly" />
		</copy>

		<delete dir="${tmp.dir}" />
	</target>

	<target name="build" depends="checkout">
		<ant antfile="build.xml" target="doc.build.jars" dir="${checkout.dir}/com.buglabs.common">
			<property name="project" value="com.buglabs.common"></property>
		</ant>
		<ant antfile="build.xml" target="doc.build.jars" dir="${checkout.dir}/com.buglabs.osgi.shell" />
		<ant antfile="build.xml" target="doc.build.jars" dir="${checkout.dir}/com.buglabs.bug.ws" />
		<ant antfile="build.xml" target="doc.build.jars" dir="${checkout.dir}/com.buglabs.bug.appui" />
		<ant antfile="build.xml" target="doc.build.jars" dir="${checkout.dir}/com.buglabs.bug.bmi" />
		<ant antfile="build.xml" target="doc.build.jars" dir="${checkout.dir}/com.buglabs.bug.dragonfly" />
		<ant antfile="build.xml" target="doc.build.jars" dir="${checkout.dir}/com.buglabs.util.shell" />
		<ant antfile="build.xml" target="doc.build.jars" dir="${checkout.dir}/com.buglabs.bug.service" />
		<ant antfile="build.xml" target="doc.build.jars" dir="${checkout.dir}/com.buglabs.util.nmea" />
		<ant antfile="build.xml" target="doc.build.jars" dir="${checkout.dir}/com.buglabs.bug.simulator" />
		<ant antfile="build.xml" target="build.jars" dir="${checkout.dir}/com.sun.javax.servlet" />
		<ant antfile="build.xml" target="doc.build.jars" dir="${checkout.dir}/com.buglabs.osgi.sewing" />
	</target>

	<!-- 
		this target is called by default in the script. When building from com.buglabs.sdk.xml call build target so that that script will generate appropriate
		file names
	-->
	<target name="publish" depends="build">
		<echo message="Publishing ${meta.project}..." />
		<mkdir dir="${base.build.dir}/artifacts/${build.level}/${meta.project}/${project.version}" />

		<copy todir="${base.build.dir}/artifacts/${build.level}/${meta.project}/${project.version}">
			<fileset dir="${checkout.dir}/${meta.project}/dist" />
		</copy>

		<exec dir="${base.build.dir}/artifacts/${build.level}/${meta.project}/${project.version}" executable="wget">
			<arg line="${felix.download.url}org.apache.felix.configadmin-1.2.8.jar" />
		</exec>

		<exec dir="${base.build.dir}/artifacts/${build.level}/${meta.project}/" executable="rm">
			<arg line="current" />
		</exec>

		<symlink link="${base.build.dir}/artifacts/${build.level}/${meta.project}/current" resource="${base.build.dir}/artifacts/${build.level}/${meta.project}/${project.version}" />
	</target>

	<target name="clean">
		<delete dir="${checkout.dir}" />
		<delete dir="${tmp.dir}" />
	</target>

	<target name="makeDirs">
		<mkdir dir="${checkout.dir}" />
		<mkdir dir="${meta.distDirectory}" />
	</target>
</project>
