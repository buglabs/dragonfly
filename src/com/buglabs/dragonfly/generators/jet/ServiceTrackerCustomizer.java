package com.buglabs.dragonfly.generators.jet;

import java.util.*;

public class ServiceTrackerCustomizer
 {
  protected static String nl;
  public static synchronized ServiceTrackerCustomizer create(String lineSeparator)
  {
    nl = lineSeparator;
    ServiceTrackerCustomizer result = new ServiceTrackerCustomizer();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "/**" + NL + " *\tGenerated by DragonFly" + NL + " *" + NL + " */" + NL + "package ";
  protected final String TEXT_2 = ";" + NL + "" + NL + "import org.osgi.framework.BundleContext;" + NL + "import com.buglabs.application.AbstractServiceTracker;";
  protected final String TEXT_3 = NL + "import ";
  protected final String TEXT_4 = ".*;";
  protected final String TEXT_5 = NL + NL + " /**" + NL + " *\tService tracker for the BugApp Bundle;" + NL + " *" + NL + " */" + NL + "public class ";
  protected final String TEXT_6 = "ServiceTracker extends AbstractServiceTracker {";
  protected final String TEXT_7 = NL + "\tprivate ";
  protected final String TEXT_8 = "Application application;";
  protected final String TEXT_9 = "\t" + NL + "" + NL + "\tpublic ";
  protected final String TEXT_10 = "ServiceTracker(BundleContext context) {" + NL + "\t\tsuper(context);" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * Determines if the application can start." + NL + "\t */" + NL + "\tpublic boolean canStart() {" + NL + "\t\treturn super.canStart();" + NL + "\t}" + NL + "\t" + NL + "\t/**" + NL + "\t * If canStart returns true" + NL + "     * this method is called to start the application." + NL + "     * Place your fun logic here. " + NL + "\t */" + NL + "\tpublic void doStart() {";
  protected final String TEXT_11 = NL + "\t\tif(!getApplication().isAlive()) {" + NL + "\t\t\tif(getApplication().getRan()) {" + NL + "\t\t\t\tapplication = new ";
  protected final String TEXT_12 = "Application(this);" + NL + "\t\t\t}" + NL + "\t\t\tgetApplication().start();" + NL + "\t\t}";
  protected final String TEXT_13 = NL + "\t\tSystem.out.println(\"";
  protected final String TEXT_14 = "ServiceTracker: start\");";
  protected final String TEXT_15 = NL + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Called when a service that this application depends is unregistered." + NL + "\t */" + NL + "\tpublic void doStop() {";
  protected final String TEXT_16 = NL + "\t\tgetApplication().tearDown();";
  protected final String TEXT_17 = NL + "\t\tSystem.out.println(\"";
  protected final String TEXT_18 = "ServiceTracker: stop\");";
  protected final String TEXT_19 = NL + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Allows the user to set the service dependencies by" + NL + "     * adding them to services list returned by getServices()." + NL + "     * i.e.nl getServices().add(MyService.class.getName());" + NL + "\t */" + NL + "\tpublic void initServices() {";
  protected final String TEXT_20 = NL + "\t\tgetServices().addAll(getApplication().getServices());";
  protected final String TEXT_21 = NL + "\t\tgetServices().add(\"";
  protected final String TEXT_22 = "\");";
  protected final String TEXT_23 = NL + "\t}" + NL + "\t";
  protected final String TEXT_24 = NL + "\t/**" + NL + "\t * Returns the application thread." + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_25 = "Application getApplication() {" + NL + "\t\tif(application == null) {" + NL + "\t\t\tapplication = new ";
  protected final String TEXT_26 = "Application(this);" + NL + "\t\t}" + NL + "\t\t" + NL + "\t\treturn application;" + NL + "\t}";
  protected final String TEXT_27 = NL + "}" + NL;
  protected final String TEXT_28 = NL;

   public String generate(List serviceNames, String appName, String packageName, String appPackageName, boolean genApp)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    stringBuffer.append(TEXT_1);
    stringBuffer.append(packageName);
    stringBuffer.append(TEXT_2);
    if(genApp) {

    stringBuffer.append(TEXT_3);
    stringBuffer.append(appPackageName);
    stringBuffer.append(TEXT_4);
    
} // end if(genApp)

    stringBuffer.append(TEXT_5);
    stringBuffer.append(appName);
    stringBuffer.append(TEXT_6);
    
if(genApp) {

    stringBuffer.append(TEXT_7);
    stringBuffer.append(appName);
    stringBuffer.append(TEXT_8);
    
}//end of if(genApp) 

    stringBuffer.append(TEXT_9);
    stringBuffer.append(appName);
    stringBuffer.append(TEXT_10);
    
if(genApp) {

    stringBuffer.append(TEXT_11);
    stringBuffer.append(appName);
    stringBuffer.append(TEXT_12);
    
} else {

    stringBuffer.append(TEXT_13);
    stringBuffer.append(appName);
    stringBuffer.append(TEXT_14);
    
}

    stringBuffer.append(TEXT_15);
    
if(genApp) {

    stringBuffer.append(TEXT_16);
    
} else {

    stringBuffer.append(TEXT_17);
    stringBuffer.append(appName);
    stringBuffer.append(TEXT_18);
    
}

    stringBuffer.append(TEXT_19);
    
if(genApp) {

    stringBuffer.append(TEXT_20);
    
} else {
	Iterator si = serviceNames.iterator();
	while(si.hasNext()) {
		String name = (String) si.next();

    stringBuffer.append(TEXT_21);
    stringBuffer.append(name);
    stringBuffer.append(TEXT_22);
    
	}
}

    stringBuffer.append(TEXT_23);
    
if(genApp) {

    stringBuffer.append(TEXT_24);
    stringBuffer.append(appName);
    stringBuffer.append(TEXT_25);
    stringBuffer.append(appName);
    stringBuffer.append(TEXT_26);
    
}	// end of if(genApp)

    stringBuffer.append(TEXT_27);
    stringBuffer.append(TEXT_28);
    return stringBuffer.toString();
  }
}