<project name="Build specific targets and properties" default="noDefault">

	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- Add on <ant> task for each top level element being built. -->
	<!-- ===================================================================== -->
	<target name="allElements">	
		<ant antfile="${genericTargets}" target="${target}">
		<property name="type" value="feature" />
		<property name="id" value="${product}" />
		</ant>
	</target>

	<!-- ===================================================================== -->
	<!-- Targets to assemble the built elements for particular configurations  -->
	<!-- These generally call the generated assemble scripts (named in -->
	<!-- ${assembleScriptName}) but may also add pre and post processing -->
	<!-- Add one target for each root element and each configuration -->
	<!-- ===================================================================== -->

	<target name="assemble.com.buglabs.dragonfly.dm.feature">
		<ant antfile="${assembleScriptName}" dir="${buildDirectory}"/>
	</target>

	<!-- ===================================================================== -->
	<!-- ===================================================================== -->
	<target name="getBaseComponents" depends="checkLocalBase" unless="skipBase">
		<get src="${eclipseBaseURL}" dest="${buildDirectory}/../temp-base.zip" />
		<unzip dest="${base}" overwrite="true" src="${buildDirectory}/../temp-base.zip" />
	</target>

	<target name="checkLocalBase">
		<available file="${base}" property="skipBase" />
	</target>

	<!-- ===================================================================== -->
	<!-- Check out map files from correct repository -->
	<!-- Replace values for mapsCheckoutTag as desired. -->
	<!-- ===================================================================== -->
	<target name="getMapFiles" depends="checkLocalMaps" unless="skipMaps">
		<property name="mapsCheckoutTag" value="HEAD" />
		<cvs cvsRoot="${mapsRepo}" package="${mapsRoot}" dest="${buildDirectory}/maps" tag="${mapsCheckoutTag}" />
	</target>

	<target name="checkLocalMaps">
		<available property="skipMaps" file="${buildDirectory}/maps" />
	</target>

	<target name="tagMapFiles" if="tagMaps">
		<cvs dest="${buildDirectory}/maps/${mapsRoot}" command="tag ${mapsTagTag}" />
	</target>

	<!-- ===================================================================== -->

	<target name="clean" unless="noclean">
		<antcall target="allElements">
			<param name="target" value="cleanElement" />
		</antcall>
	</target>

	<target name="gatherLogs">
		<mkdir dir="${buildDirectory}/${buildLabel}/compilelogs" />
		<antcall target="allElements">
			<param name="target" value="gatherLogs" />
		</antcall>
		<unzip dest="${buildDirectory}/${buildLabel}/compilelogs" overwrite="true">
			<fileset dir="${buildDirectory}/features">
				<include name="**/*.log.zip" />
			</fileset>
		</unzip>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
		<antcall target="getBaseComponents" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="postFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="preGenerate">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
		<antcall target="clean" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running assemble. -->
	<!-- ===================================================================== -->
	<target name="preAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running assemble. -->
	<!-- ===================================================================== -->
	<target name="postAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running package. -->
	<!-- ===================================================================== -->
	<target name="prePackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running package. -->
	<!-- ===================================================================== -->
	<target name="postPackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the build is done. -->
	<!-- ===================================================================== -->			
	<target name="postBuild">
		<property name="outputDir" location="${buildDirectory}/${buildLabel}"/>
		<property name="distDir" location="${buildDirectory}/../dist"/>
		<property name="UpdateSiteStagingLocation" value="${buildDirectory}/${updateSite}"/>
	 	<property name="sitePackagePrefix" value="${updateSite}"/>
	  
		<delete dir="${UpdateSiteStagingLocation}"/>
	  	<antcall target="generateUpdateSite"/>

   	  	<copy todir="${distDir}">
   	  		<fileset dir="${outputDir}"/>
	  	</copy>
		
	  	<zip destfile="${distDir}/${updateSite}-${forceContextQualifier}.zip" basedir="${UpdateSiteStagingLocation}" excludes="CVS .project"/>
	
		<delete dir="${publishDir}" />
		<mkdir dir="${publishDir}" />
		<copy todir="${publishDir}">
			<fileset dir="${distDir}" />
		</copy>	
	</target>
	
	<target name="generateUpdateSite">
	  <!-- Create the directory structure -->
	  <mkdir dir="${UpdateSiteStagingLocation}"/>
	  <mkdir dir="${UpdateSiteStagingLocation}/features"/>
	  <mkdir dir="${UpdateSiteStagingLocation}/plugins"/>
	  <!-- Build the jar files -->
	  <antcall target="allElements">
	    <param name="genericTargets" value="${builder}/customTargets.xml"/>
	    <param name="target" value="updateSiteExport"/>
	  </antcall>
	  <antcall target="copySiteXmlFromCvs"/>
	  <antcall target="updateSiteXml"/>
	  <!-- antcall target="createNightlyBuildSiteXml"/ -->
	</target>
	
	<target name="updateSiteExport">
	  <ant antfile="build.xml" dir="${buildDirectory}/features/${id}/" target="build.update.jar">
	    <property name="feature.destination" value="${UpdateSiteStagingLocation}/features"/>
	    <property name="plugin.destination" value="${UpdateSiteStagingLocation}/plugins"/>
	  </ant>
	</target>
	
	<target name="copySiteXmlFromCvs" unless="isNightlyBuild">
		<copy file="${buildDirectory}/../../${updateSite}/site.xml" tofile="${buildDirectory}/${updateSite}/site.xml"/>
		<!-- cvs cvsRoot="${mapsRepo}" package="${updateSite}" dest="${buildDirectory}" tag="${mapsCheckoutTag}" / -->
	</target>
	
	<target name="updateSiteXml">
		<replace file="${buildDirectory}/${updateSite}/site.xml" token="qualifier" value="${forceContextQualifier}" />
	</target>
		
	<target name="createNightlyBuildSiteXml" if="isNightlyBuild">
	  <!-- create ${UpdateSiteStagingLocation}/site.xml which contains only the nighlty build version -->
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to test the build results -->
	<!-- ===================================================================== -->
	<target name="test">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to publish the build results -->
	<!-- ===================================================================== -->
	<target name="publish">
	</target>

	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>
</project>